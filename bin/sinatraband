#!/usr/bin/env ruby

require 'pathname'
require 'erb'
require_relative '../lib/helper.rb'

def create_app
  #Creates de App diretory
  mkdir "./#{@APP_NAME}"

  #Creates de App file
  generate_file_from_template "", :app, :app, :rb

  #Creates de Database file
  generate_file_from_template "", :database, :database, :rb

  #Creates de View diretory
  mkdir "./#{@APP_NAME}/views"

  #Creates de Models diretory
  mkdir "./#{@APP_NAME}/models"

  #Creates de index file
  generate_file_from_template "/views", :index, :index, :erb
end


def create_model model_name, model_properties
  @model_name = model_name.capitalize
  @model_properties = elaborates_model_properties model_properties

  #Creates de Model file
  generate_file_from_template "/models", :model, model_name, :rb
end


def proccess_argument
  
  if ARGV.empty?
    put_error_and_quit "Error: Missing arguments"
  else
    #Get the global current path
    @ROOT = Pathname(__FILE__).dirname.realpath.to_s()+"/../lib/templates"

    #Defines operation
    case ARGV[0]
      when "create"
        #Get de App name
        if ARGV[1].nil?
          put_error_and_quit "Error: Missing arguments for create action"
        else
          @APP_NAME = ARGV[1]
          create_app
        end
      when "model"
        if ARGV[1].nil?
          put_error_and_quit "Error: Missing arguments for model action"
        else
          if ARGV.length > 2
            model_properties = Array.new
            ARGV.each_with_index do |property, index|
              if index > 1
                model_properties << property
              end
            end
          end
          create_model ARGV[1], model_properties
        end
      else
        put_error_and_quit "Error: Missing or unknow arguments"
    end
    
  end

end

#start de proccess
proccess_argument
