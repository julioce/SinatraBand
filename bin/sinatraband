#!/usr/bin/env ruby

require 'pathname'
require 'erb'
require_relative './helper.rb'

def create_app
  #Creates de App diretory
  mkdir :directory => "./#{@APP_NAME}"

  #Creates de App file
  generate_file_from_template :directory => "", :template => "app", :final_file => "app", :extension => "rb"

  #Creates de Database file
  generate_file_from_template :directory => "", :template => "database", :final_file => "database", :extension => "rb"

  #Creates de View diretory
  mkdir :directory => "./#{@APP_NAME}/views"

  #Creates de Models diretory
  mkdir :directory => "./#{@APP_NAME}/models"

  #Creates de index file
  generate_file_from_template :directory => "/views", :template => "index", :final_file => "index", :extension => "erb"
end


def create_model input={:model_name => '', :model_properties => {}}
  @model_name = input[:model_name].capitalize
  @model_properties = elaborates_model_properties :model_properties => input[:model_properties]

  #Creates de Model file
  generate_file_from_template :directory => "/models", :template => "model", :final_file => input[:model_name].downcase, :extension => "rb"
end


def proccess_argument
  #Get the global current path
  @ROOT = Pathname(__FILE__).dirname.realpath.to_s+"/../lib/templates"

  #Defines operation
  case ARGV[0].downcase
    when "create"
      #Get de App name
      if ARGV[1].nil?
        put_error_and_quit :error_message => "Error: Missing arguments for create action"
      else
        @APP_NAME = ARGV[1]
        create_app
      end
    when "model"
      if ARGV[1].nil?
        put_error_and_quit :error_message => "Error: Missing arguments for model action"
      else
        if ARGV.length > 2
          model_properties = Array.new
          ARGV.each_with_index do |property, index|
            if index > 1
              model_properties << property
            end
          end
        end
        create_model :model_name => ARGV[1], :model_properties => model_properties
      end
    else
      put_error_and_quit :error_message => "Error: Missing or unknow arguments"
  end
end

#start de proccess
if ARGV.empty?
  put_error_and_quit :error_message => "Error: Missing arguments"
else
  proccess_argument
end